# -*- mode: ruby -*-
# vi: set ft=ruby :

def fail_with_message( msg )
    fail Vagrant::Errors::VagrantError.new, msg
end

# Check for required vagrant plugins
if ! Vagrant.has_plugin? 'vagrant-hostmanager'
    fail_with_message "vagrant-hostmanager missing, please install the plugin with this command:
        vagrant plugin install vagrant-hostmanager"
end

# RUN VAGRANT
Vagrant.configure("2") do |config|
    config.hostmanager.enabled              = true
    config.hostmanager.manage_host          = true
    config.hostmanager.manage_guest         = false
    config.hostmanager.ignore_private_ip    = false
    config.hostmanager.include_offline      = true
    config.hostmanager.aliases              = []
    
    $done = <<-SCRIPT
echo "####################################################################"
echo "# This Machine is DONE!!!"
echo "####################################################################"
    SCRIPT
    
    ####################################################################
    # /BEGIN Kubernetes Controller Host
    config.vm.define "KubernetesController_1", primary: true do |kch|
        kch.vm.box              = "bento/centos-7"
        #kch.vm.box              = "bento/ubuntu-20.04"
        #kch.vm.box 				= "bento/ubuntu-18.04"
        
        kch.vm.hostname         = "kube-controller"
        kch.vm.box_check_update = true
        
        kch.vm.network :private_network, ip: "10.0.254.2"
        kch.vm.network :forwarded_port, guest: 8001, host: 8001 # DASHBOARD: http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/
        
        kch.vm.synced_folder "./", "/vagrant"
    
        kch.vm.provider "virtualbox" do |vb|
            vb.cpus 	= 2
            vb.memory   = 2048
        end
        
        kch.vm.provision "shell", path: "vagrant.d/provision/main.sh", env: {}

        kch.vm.provision :puppet do |puppet|
            puppet.manifests_path 		= 'vagrant.d/puppet/manifests'
            puppet.module_path    		= 'vagrant.d/puppet/modules'
            puppet.options        		= ['--verbose', '--debug']
    		
    		puppet.hiera_config_path	= "vagrant.d/puppet/hiera/hiera.yaml"
            puppet.manifest_file  		= "nodeKubernetesController.pp"
            puppet.facter         		= {
                
            }
        end

        kch.vm.provision "shell", inline: $done
    end
    # /END Kubernetes Controller Host
    ####################################################################

    ####################################################################
    # /BEGIN Kubernetes Worker Host
    config.vm.define "KubernetesWorker_1" do |kwh|
        kwh.vm.box              = "bento/centos-7"
        #kwh.vm.box              = "bento/ubuntu-20.04"
        #kwh.vm.box              = "bento/ubuntu-18.04"
        
        kwh.vm.hostname         = "kube-worker.lh"
        kwh.vm.box_check_update = true
        
        kwh.vm.network :private_network, ip: "10.0.254.3"
        
        kwh.vm.synced_folder ".", "/vagrant"
        
        kwh.vm.provider "virtualbox" do |vb|
            vb.cpus     = 2
            vb.memory   = 1024
        end
    
        kwh.vm.provision "shell", path: "vagrant.d/provision/main.sh", env: {
            "PUPPET_AGENT"  => 1,
        }

        kwh.vm.provision :puppet do |puppet|
            puppet.manifests_path       = 'vagrant.d/puppet/manifests'
            puppet.module_path          = 'vagrant.d/puppet/modules'
            puppet.options              = ['--verbose', '--debug']
    
            puppet.hiera_config_path    = "vagrant.d/puppet/hiera/hiera.yaml"
            puppet.manifest_file        = "nodeKubernetesWorker.pp"
            puppet.facter               = {}
        end
    
        kwh.vm.provision "shell", inline: $done
    end
    # /END Kubernetes Worker Host
    ###################################################################
    
end
